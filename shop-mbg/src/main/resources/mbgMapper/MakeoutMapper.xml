<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zc.shop.mbg.mapper.MakeoutMapper">
  <resultMap id="BaseResultMap" type="com.zc.shop.mbg.po.Makeout">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="danwei" jdbcType="VARCHAR" property="danwei" />
    <result column="shuihao" jdbcType="VARCHAR" property="shuihao" />
    <result column="bank" jdbcType="VARCHAR" property="bank" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zc.shop.mbg.po.Makeout">
    <result column="pic" jdbcType="LONGVARCHAR" property="pic" />
  </resultMap>
  <sql id="Base_Column_List">
    id, danwei, shuihao, bank, account, address, phone, user_id, created_at, updated_at
  </sql>
  <sql id="Blob_Column_List">
    pic
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from `makeout`
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `makeout`
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zc.shop.mbg.po.Makeout">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `makeout` (danwei, shuihao, bank, 
      account, address, phone, 
      user_id, created_at, updated_at, 
      pic)
    values (#{danwei,jdbcType=VARCHAR}, #{shuihao,jdbcType=VARCHAR}, #{bank,jdbcType=VARCHAR}, 
      #{account,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{userId,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{pic,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zc.shop.mbg.po.Makeout">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `makeout`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="danwei != null">
        danwei,
      </if>
      <if test="shuihao != null">
        shuihao,
      </if>
      <if test="bank != null">
        bank,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="pic != null">
        pic,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="danwei != null">
        #{danwei,jdbcType=VARCHAR},
      </if>
      <if test="shuihao != null">
        #{shuihao,jdbcType=VARCHAR},
      </if>
      <if test="bank != null">
        #{bank,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zc.shop.mbg.po.Makeout">
    update `makeout`
    <set>
      <if test="danwei != null">
        danwei = #{danwei,jdbcType=VARCHAR},
      </if>
      <if test="shuihao != null">
        shuihao = #{shuihao,jdbcType=VARCHAR},
      </if>
      <if test="bank != null">
        bank = #{bank,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zc.shop.mbg.po.Makeout">
    update `makeout`
    set danwei = #{danwei,jdbcType=VARCHAR},
      shuihao = #{shuihao,jdbcType=VARCHAR},
      bank = #{bank,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      pic = #{pic,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zc.shop.mbg.po.Makeout">
    update `makeout`
    set danwei = #{danwei,jdbcType=VARCHAR},
      shuihao = #{shuihao,jdbcType=VARCHAR},
      bank = #{bank,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>