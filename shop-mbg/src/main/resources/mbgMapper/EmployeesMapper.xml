<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zc.shop.mbg.mapper.EmployeesMapper">
  <resultMap id="BaseResultMap" type="com.zc.shop.mbg.po.Employees">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="c_id" jdbcType="INTEGER" property="cId" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
    <result column="position_id" jdbcType="INTEGER" property="positionId" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="is_on" jdbcType="INTEGER" property="isOn" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, c_id, department_id, position_id, role_id, created_at, updated_at, gender, 
    `name`, is_on
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `employees`
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from `employees`
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zc.shop.mbg.po.Employees">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `employees` (user_id, c_id, department_id, 
      position_id, role_id, created_at, 
      updated_at, gender, `name`, 
      is_on)
    values (#{userId,jdbcType=INTEGER}, #{cId,jdbcType=INTEGER}, #{departmentId,jdbcType=INTEGER}, 
      #{positionId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedAt,jdbcType=TIMESTAMP}, #{gender,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{isOn,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zc.shop.mbg.po.Employees">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `employees`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="cId != null">
        c_id,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="positionId != null">
        position_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="isOn != null">
        is_on,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="cId != null">
        #{cId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="positionId != null">
        #{positionId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="isOn != null">
        #{isOn,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zc.shop.mbg.po.Employees">
    update `employees`
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="cId != null">
        c_id = #{cId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="positionId != null">
        position_id = #{positionId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="isOn != null">
        is_on = #{isOn,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zc.shop.mbg.po.Employees">
    update `employees`
    set user_id = #{userId,jdbcType=INTEGER},
      c_id = #{cId,jdbcType=INTEGER},
      department_id = #{departmentId,jdbcType=INTEGER},
      position_id = #{positionId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      gender = #{gender,jdbcType=INTEGER},
      `name` = #{name,jdbcType=VARCHAR},
      is_on = #{isOn,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>